?sliderInput
library("shiny")
?sliderInput
?mainPanel
runGitHub("stat133-fall-2018", "ucb-stat133", subdir = "apps/coin-toss")
?reactive
runApp()
array()
?array
?sapply
runApp()
runApp()
library(ggplot2)
?data.frame
data.frame(x = 1, y = 1:10)
data.frame(array(0, c(input$yrs + 1, 4)))
data.frame(array(0, c(11, 4)))
array(0, c(11, 4))
?reshapeLong
?reshape\
?reshape
reshape(array(0, c(11, 4)), varying = c(V1, V3))
reshape(array(0, c(11, 4)), varying = c(V1, V3), direction = long)
reshape(array(0, c(11, 4)), varying = c(V1, V3), direction = "long")
a <- data.frame(array(0, c(11, 4)))
names(a) <- c("V1","V2","V3","V4")
reshape(array(0, c(11, 4)), varying = c(V1, V3), direction = "long")
reshape(array(0, c(11, 4)), varying = c("V1", "V3"), direction = "long")
reshape(array(0, c(11, 4)), varying = c(2, 3), direction = "long")
reshape(array(0, c(11, 4)), varying = c("V2", "V3"), direction = "long")
reshape(array(0, c(11, 4)), varying = c("V2", "V3"), idvar = "returns", direction = "long")
FV(1,.1,1:10)
FV <- function(amount, rate, years){
if (years < 0){
stop("years must be positive")
}
return(amount*((1+rate)^years))
}
FV(1,.1,1:10)
install.packages("reshape")
library("reshape")
?melt
library("ggplot")
library("ggplot2")
shiny::runApp()
?select.list
runApp()
?selectInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('app1.R')
runApp('app1.R')
?melt
install.packages("reshape2")
?melt.data.frame
